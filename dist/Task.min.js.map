{"version":3,"file":"Task.min.js","sources":["../src/invariant.js","../src/index.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nexport default invariant\n","import invariant from \"./invariant.js\";\n\nconst START = 0;\nconst DATA = 1;\nconst ERROR = 2;\nconst CANCEL = 3;\n\nconst invariantStart = (start) =>\n  invariant(start === 0, \"sources and operators can only be started\");\n\nexport const pipe = (...cbs) => {\n  let res = cbs[0];\n  for (let i = 1, n = cbs.length; i < n; i++) res = cbs[i](res);\n  return res;\n};\n\nexport const rejected = (e) => (start, sink) => {\n  invariantStart(start);\n  sink(ERROR, e);\n};\n\nexport const resolved = (a) => (start, sink) => {\n  invariantStart(start);\n  sink(DATA, a);\n};\n\nexport const make = (f) => (start, sink) => {\n  invariantStart(start);\n  const onResolve = (a) => sink(DATA, a);\n  const onReject = (e) => sink(ERROR, e);\n  let cleanup = f(onReject, onResolve);\n  sink(START, (t, d) => {\n    if (t === CANCEL && cleanup) cleanup();\n  });\n};\n\nexport const flatMapError = (f) => (source) => (start, sink) => {\n  invariantStart(start);\n  source(START, (t, d) => {\n    t === ERROR ? f(d)(START, sink) : sink(t, d);\n  });\n};\n\nexport const mapError = (f) => (source) => (start, sink) => {\n  invariantStart(start);\n  source(START, (t, d) => {\n    sink(t, t === ERROR ? f(d) : d);\n  });\n};\n\nexport const flatMap = (f) => (source) => (start, sink) => {\n  invariantStart(start);\n  source(START, (t, d) => {\n    t === DATA ? f(d)(START, sink) : sink(t, d);\n  });\n};\n\nexport const map = (f) => (source) => (start, sink) => {\n  invariantStart(start);\n  source(START, (t, d) => {\n    sink(t, t === DATA ? f(d) : d);\n  });\n};\n\nexport const andMap = (sourceA) => (sourceF) => (start, sink) => {\n  invariantStart(start);\n\n  let tf, df, ta, da;\n\n  const tryAll = () => {\n    if (tf === DATA && ta === DATA) return sink(DATA, df(da));\n    if (tf === ERROR && ta) return sink(ERROR, df);\n    if (ta === ERROR && tf) return sink(ERROR, da);\n  };\n\n  sourceF(START, (t, d) => {\n    if (t === START) sink(t, d);\n    if (t === DATA || t === ERROR) {\n      tf = t;\n      df = d;\n      tryAll();\n    }\n  });\n\n  sourceA(START, (t, d) => {\n    if (t === START) sink(t, d);\n    if (t === DATA || t === ERROR) {\n      ta = t;\n      da = d;\n      tryAll();\n    }\n  });\n};\n\nexport const fork = (onReject, onResolve) => (source) => {\n  let talkback;\n  source(START, (t, d) => {\n    if (t === START) talkback = d;\n    if (t === DATA) onResolve(d);\n    if (t === ERROR) onReject(d);\n  });\n  return () => {\n    talkback(CANCEL);\n  };\n};\n"],"names":["NODE_ENV","process","env","invariantStart","start","condition","format","a","b","c","d","e","f","undefined","Error","error","args","argIndex","replace","name","framesToPop","invariant","sourceA","sourceF","sink","tf","df","ta","da","tryAll","t","source","onReject","onResolve","talkback","cleanup","cbs","res","i","n","length"],"mappings":"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"}